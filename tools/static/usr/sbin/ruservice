#! /bin/bash
#
# ruservice

ETC_DIR=/etc/russ
RUN_DIR=/var/run/russ
CONF_DIR=${ETC_DIR}/conf
PID_DIR=${RUN_DIR}

function getconfnames {
	local confname confnames filename filenames

	confname=$1; shift 1

	confnames=()
	if [ -d "${CONF_DIR}/${confname}" ]; then
		filenames=$(cd "${CONF_DIR}"; find "${confname}")
	elif [ -e "${CONF_DIR}/${confname}.conf" ]; then
		filenames="${confname}.conf"
	else
		filenames=""
	fi
	for filename in ${filenames}; do
		confname=${filename%.conf}
		if [ "${confname}" != "${filename}" ]; then
			confnames+=("${confname#./}")
		fi
	done
	echo "${confnames[*]}"
}

function getpid {
	local name pid pidpath

	name=$1; shift 1

	pidpath=$(getpidpath ${name})
	pid=$(cat "${pidpath}" 2> /dev/null) && $(kill -0 ${pid} 2> /dev/null)
	echo "${pid}"
}

function getpidpath {
	local confname

	confname=$1; shift 1

	confname=$(echo ${confname} | sed 's/\//__/g')
	echo "${PID_DIR}/${confname}.pid"
}

function list {
	local confnames

	confnames=$(getconfnames .)
	if [ -n "${confnames}" ]; then
		echo "${confnames}"
	fi
}

function status {
	echo -n "[${confname}] "
	pid=$(getpid ${confname})
	if [ -n "${pid}" ] && kill -0 ${pid} 2> /dev/null; then
		echo "RUNNING"
		return 0
	else
		echo "NOT RUNNING"
		return 1
	fi
}

function statusall {
	local confname confnames

	confnames=$(getconfnames .)
	for confname in ${confnames}; do
		status
	done
}

function restart {
	stop
	sleep 1
	start
}

function start {
	local pid

	#echo -n "starting server (${confname}) ... "
	echo -n "[${confname}] "
	pid=$(cat "${pidpath}" 2> /dev/null) && $(kill -0 ${pid} 2> /dev/null)
	if [ $? -eq 0 ]; then
		echo "RUNNING"
		return
	fi
	rustart -f ${confpath} < /dev/null > /dev/null 2>&1 & pid=$!
	echo ${pid} > "${pidpath}"
	kill -0 ${pid} && echo "STARTED" || { echo "START FAILED"; return 1;}
}

function stop {
	local pid

	#echo -n "stopping server (${confname}) ... "
	echo -n "[${confname}] "
	pid=$(cat "${pidpath}" 2> /dev/null)
	if [ $? -ne 0 ]; then
		echo "NOT RUNNING"
		return
	fi
	kill ${pid} 2> /dev/null
	rm -f "${pidpath}" 2> /dev/null
	[ $? -eq 0 ] && echo "STOPPED" || { echo "STOP FAILED"; return 1;}
}

function print_usage {
	echo "\
usage: $PROGNAME <confname> {start|stop|restart|status|list}
       $PROGNAME list|status
       $PROGNAME -h|--help|help

Manage system configured RUSS servers. Configurations must be in
${CONF_DIR}.

Where:
<confname>	Configuration name which may be a directory or file
		(not including .conf). confname of \".\" means all
		configuration names."
}

PROGNAME=$(basename $0)

if [ $# -eq 1 ]; then
	confname=
	cmd=$1; shift 1

	case "${cmd}" in
	-h|--help|help)
		print_usage
		exit 0
		;;
	list)
		list
		;;
	status)
		statusall
		;;
	*)
		echo "error: bad/missing arguments"
		exit 1
		;;
	esac
elif [ $# -eq 2 ]; then
	confname=$1; shift 1
	cmd=$1; shift 1

	confnames=$(getconfnames ${confname})
	if [ "${cmd}" = "list" ]; then
		if [ -n "${confnames}" ]; then
			echo ${confnames}
		fi
		exit 0
	fi
	for confname in ${confnames}; do
		confpath="${CONF_DIR}/${confname}.conf"
		pidpath=$(getpidpath ${confname})

		if [ ! -r "${confpath}" ]; then
			echo "error: cannot find configuration" 1>&2
		else
			case "${cmd}" in
			status)
				status
				;;
			start)
				start
				;;
			stop)
				stop
				;;
			restart)
				restart
				;;
			*)
				echo "error: bad/missing arguments"
				exit 1
				;;
			esac
		fi
	done
else
	echo "error: bad/missing arguments" 1>&2
	exit 1
fi
