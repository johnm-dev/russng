#! /bin/bash
#
# ruservice

ETC_DIR=/etc/russ
RUN_DIR=/var/run/russ
CONF_DIR=${ETC_DIR}/conf
PID_DIR=${RUN_DIR}/pids

function getconfnames {
	local confname confnames filename filenames

	confname=$1; shift 1

	confnames=()
	if [ "${confname}" = "." ]; then
		filenames=$(cd "${CONF_DIR}"; \ls *.conf)
	elif [ -e "${CONF_DIR}/${confname}.conf" ]; then
		filenames="${confname}.conf"
	else
		filenames=""
	fi
	for filename in ${filenames}; do
		confname=${filename%.conf}
		if [ "${confname}" != "${filename}" ]; then
			confnames+=("${confname#./}")
		fi
	done
	echo "${confnames[*]}"
}

function getpid {
	local confname pid pidpath

	confname=$1; shift 1

	pidpath=$(getpidpath ${confname})
	pid=$(cat "${pidpath}" 2> /dev/null)
	echo "${pid}"
}

function getpidpath {
	local confname

	confname=$1; shift 1

	echo "${PID_DIR}/${confname}.pid"
}

function list {
	local confname confnames

	confname=$1; shift 1

	confnames=$(getconfnames ${confname})
	if [ -n "${confnames}" ]; then
		echo "${confnames}"
	fi
}

function status {
	local pgid

	echo -n "[${confname}] "
	pgid=$(getpid ${confname})
	if [ -n "${pgid}" ] && kill -0 -${pgid} 2> /dev/null; then
		echo "RUNNING"
		return 0
	else
		echo "NOT RUNNING"
		return 1
	fi
}

function restart {
	stop
	sleep 1
	start
}

function start {
	local pgid

	#echo -n "starting server (${confname}) ... "
	echo -n "[${confname}] "
	pgid=$(cat "${pidpath}" 2> /dev/null)
	if [ -n "${pgid}" ] && kill -0 -${pgid} 2> /dev/null; then
		echo "RUNNING"
		return 0
	fi

	ruspawn -f ${confpath} -c main:pgid=0 < /dev/null > /dev/null 2>&1 & pgid=$!
	sleep 0.25
	echo ${pgid} > "${pidpath}"
	kill -0 -${pgid} && echo "STARTED" || { echo "START FAILED"; return 1; }
}

function stop {
	local pgid

	#echo -n "stopping server (${confname}) ... "
	echo -n "[${confname}] "
	pgid=$(cat "${pidpath}" 2> /dev/null)
	if [ -z "${pgid}" ] || ! kill -0 -${pgid} 2> /dev/null; then
		echo "NOT RUNNING"
		return 1
	fi

	kill -TERM -${pgid} 2> /dev/null
	rm -f "${pidpath}" 2> /dev/null
	[ $? -eq 0 ] && echo "STOPPED" || { echo "STOP FAILED"; return 1;}
}

function print_usage {
	echo "\
usage: $PROGNAME <confname> {start|stop|restart|status|list}
       $PROGNAME list|status
       $PROGNAME -h|--help|help

Manage system configured RUSS servers. Configurations must be in
${CONF_DIR}.

Where:
<confname>	Configuration name (not including .conf). confname of
		\".\" means all configuration names."
}

PROGNAME=$(basename $0)

if [ $# -eq 1 ]; then
	confname=
	cmd=$1; shift 1

	case "${cmd}" in
	-h|--help|help)
		print_usage
		exit 0
		;;
	list)
		$0 . list
		;;
	status)
		$0 . status
		;;
	*)
		echo "error: bad/missing arguments"
		exit 1
		;;
	esac
elif [ $# -eq 2 ]; then
	confname=$1; shift 1
	cmd=$1; shift 1

	if [ "${cmd}" = "list" ]; then
		list "${confname}"
		exit 0
	fi

	confnames=$(getconfnames ${confname})
	for confname in ${confnames}; do
		confpath="${CONF_DIR}/${confname}.conf"
		pidpath=$(getpidpath ${confname})

		if [ ! -r "${confpath}" ]; then
			echo "error: cannot find configuration" 1>&2
		else
			case "${cmd}" in
			status)
				status
				;;
			start)
				start
				;;
			stop)
				stop
				;;
			restart)
				restart
				;;
			*)
				echo "error: bad/missing arguments"
				exit 1
				;;
			esac
		fi
	done
else
	echo "error: bad/missing arguments" 1>&2
	exit 1
fi
