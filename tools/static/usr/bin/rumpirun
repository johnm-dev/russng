#! /bin/bash
#
# rumpirun

function print_usage {
	echo "usage: ${PROG_NAME} [options] ...

Run an mpi program using russ.

Options:
-f <filename>
-hosts <hostname>[,...]

Environment Variables:
JOB_ID
RURUN_JOB_ID
RURUN_PNET_ADDR
"
}

#
# main
#

PROG_NAME=`basename $0`

export HYDRA_BOOTSTRAP_EXEC=${HYDRA_BOOTSTRAP_EXEC:-rurun}
export HYDRA_BOOTSTRAP=${HYDRA_BOOTSTRAP:-rsh}
export HYDRA_LAUNCHER_EXEC=${HYDRA_LAUNCHER_EXEC:-rurun}
export HYDRA_LAUNCHER=${HYDRA_LAUNCHER:-rsh}
export HYDRA_LAUNCHER_AUTOFORK=0

while [ $# -gt 0 ]; do
	if [ $1 -eq "-f" -a $# -gt 1 ]; then
		shift 1
		hosts_filename=$1; shift 1
	elif [ $1 -eq "-hosts" -a $# -gt 1 ]; then
		shift 1
		hosts=$1; shift 1 # split by ,
	else
		break
	fi 
done

# set up job tag
if [ "${JOB_ID}" != "" ]; then
	export RURUN_JOB_TAG=/cgroups/jobs/${JOB_ID}
fi

# set up pnet
if [ "${hosts}" ]; then
	hosts_filename=/tmp/$$.hosts
	echo ${hosts} > ${hosts_filename}
fi

if [ "${hosts_filename}" ]; then
	export RURUN_PNET_ADDR=/tmp/$$.pnet
	rusrv_pnet -c server:path=${RURUN_PNET_ADDR} -- ${hosts_filename}
fi

if [ "${RURUN_PNET_ADDR}" = "" ]; then
	echo "warning: RURUN_PNET_ADDR is not set"
fi

ruls ${RURUN_PNET_ADDR}/id > /tmp/$$.host-indexes

# start
mpiexec -f /tmp/$$.host-indexes "${@}"
