#! /bin/bash
#
# rumpirun (symlinked to rumpirun.openmpi and rumpirun.mpich)

# license--start
#
# Copyright 2014 John Marshall
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# license--end

# optional/required variables:
# RUMPIRUN_HOSTFILE (req)
# RUMPIRUN_LAUNCHER (opt)
# RUMPIRUN_MPIRUN (opt)
# RUMPIRUN_ENV (opt)
# RURUN_PNET_ADDR or RURUN_PNET_DIR or RURUN_PNET_FILE (req)
# RURUN_EXEC_METHOD (opt)

function print_usage {
	echo "usage: ${PROG_NAME} [options] ...

RUSS-based mpirun wrapper. If called as rumpirun, automatically
senses and calls mpirun of openmpi or mpich."
}

function is_openmpi {
	local name=$1

	st=`${name} -V 2>&1`
	[ "${st#*Open MPI}" != "${st}" ]
	return $?
}

function is_mpich {
	local name=$1

	st=`${name} --info 2>&1`
	return $?
}

#
# main
#

PROG_NAME=`basename $0`

export RUMPIRUN_MPIRUN=${RUMPIRUN_MPIRUN:-mpirun}
export RUMPIRUN_LAUNCHER=${RUMPIRUN_LAUNCHER:-rurun-mpi}

if [ -n "${RUMPIRUN_ENV}" ]; then
	export RURUN_ENV="${RUMPIRUN_ENV}"
fi

RUMPIRUN_MPIRUN=`which ${RUMPIRUN_MPIRUN} 2> /dev/null`
if [ -z "${RUMPIRUN_MPIRUN}" ]; then
	echo "error: cannot find mpirun" 1>&2
	exit 1
fi

if [ "${PROG_NAME}" = "rumpirun" ]; then
	if is_openmpi ${RUMPIRUN_MPIRUN}; then
		PROG_NAME="rumpirun.openmpi"
	elif is_mpich ${RUMPIRUN_MPIRUN}; then
		PROG_NAME="rumpirun.mpich"
	fi
fi
echo "info: Running as ${PROG_NAME}" 1>&2

if [ -n "${RURUN_PNET_ADDR}" -o -n "${RURUN_PNET_DIR}" -o -n "${RURUN_PNET_FILE}" ]; then
	unset PE_HOSTFILE

	if [ "${PROG_NAME}" = "rumpirun.openmpi" ]; then
		export OMPI_MCA_orte_default_hostfile="${RUMPIRUN_HOSTFILE}"
		export OMPI_MCA_orte_rsh_agent=${RUMPIRUN_LAUNCHER}
		export OMPI_MCA_plm_rsh_disable_qrsh=1

		MPIRUN_ARGS=""

		if ! is_openmpi "${RUMPIRUN_MPIRUN}"; then
			echo "warning: cannot validate mpirun is from openmpi"
		fi

	elif [ "${PROG_NAME}" = "rumpirun.mpich" ]; then
		export HYDRA_BOOTSTRAP=rsh
		export HYDRA_BOOTSTRAP_EXEC=${RUMPIRUN_LAUNCHER}
		export HYDRA_LAUNCHER=rsh
		export HYDRA_LAUNCHER_EXEC=${RUMPIRUN_LAUNCHER}
		export HYDRA_HOST_FILE="${RUMPIRUN_HOSTFILE}"
		export HYDRA_LAUNCHER_AUTOFORK=0

		MPIRUN_ARGS="-disable-hostname-propagation"

		if ! is_mpich "${RUMPIRUN_MPIRUN}"; then
			echo "warning: cannot validate mpirun is from mpich" 1>&2
		fi
	else
		echo "error: unknown implementation of mpirun" 1>&2
		exit 1
	fi
fi

exec ${RUMPIRUN_MPIRUN} ${MPIRUN_ARGS} "${@}"
