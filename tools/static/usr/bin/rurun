#! /bin/bash
#
# rurun

# license--start
#
# Copyright 2012 John Marshall
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# license--end

function print_usage {
	echo "\
usage: ${PROG_NAME} [options] <target> <arg> ...
       ${PROG_NAME} [--pnet <addr>] --count

Launch a program on a pnet target. If a pnet server specified
(command line or environment variable), the local host will be used.

If --count is specified, then the number of pnet targets is printed.

Options:
--debug
	Enable debugging. Or set RURUN_DEBUG=1.
--exec=simple|shell|login
	Use a given exec method. See also --simple, --shell,
	--login. Defaults to \$RURUN_EXEC_METHOD or "${RURUN_EXEC_METHOD}".
--job_id <job_id>
	Use a given job id to generate RURUN_TAG_FORMAT. Defaults to
	\$JOB_ID.
--login	Use the exec/login launch.
--notag	Do not generate a tag. Use when not targetting cgroups.
--pnet <addr>
	Use a given pnet address. Defaults to \$RURUN_PNET_ADDR.
--tag_format <string>
	Use a given format string, which is evaluated, to determine
	the cg_path value passed to the exec service. Defaults to
	\$RURUN_TAG_FORMAT or \"$RURUN_TAG_FORMAT\".
--shell	Use the exec/shell launch method.
--simple
	Use the exec/simple launch method."
}

	
if [ $# -gt 0 ]; then
	if [ "$1" = "-h" -o "$1" = "--help" ]; then
		print_usage
		exit 0
	fi
elif [ $# -lt 2 ]; then
	echo "error: bad/missing arguments" 1>&2
	exit 1
fi

while [ $# -gt 0 ]; do
	case $1 in
	--count)
		shift 1
		count=`ruexec ${RURUN_PNET_ADDR}/count`
		ev=$?
		if [ ${ev} -eq 0 ]; then
			echo ${count}
		fi
		exit ${ev}
		;;
	--debug)
		shift 1
		export RURUN_DEBUG=1
		;;
	--dir)
		shift 1
		RURUN_PNET_DIR="$1"; shift 1
		;;
	--exec)
		shift 1
		RURUN_EXEC_METHOD=$1; shift 1
		;;
	--job_id)
		shift 1
		RURUN_JOB_ID="$1"; shift 1
		;;
	--login)
		shift 1
		RURUN_EXEC_METHOD=login
		;;
	--notag)
		shift 1
		RURUN_TAG_FORMAT=""
		;;
	--pnet)
		shift 1
		RURUN_PNET_ADDR="$1"; shift 1
		;;
	--tag_format)
		shift 1
		RURUN_TAG_FORMAT="$1"; shift 1
		;;
	--shell)
		shift 1
		RURUN_EXEC_METHOD=shell
		;;
	--simple)
		shift 1
		RURUN_EXEC_METHOD=simple
		;;
	--target_method)
		shift 1
		RURUN_TARGET_METHOD=$1; shift 1
		;;
	--wrap)
		shift 1
		colon=":"
		;;
	*)
		target=$1; shift 1
		break
		;;
	esac
done

# defaults (null or unset)
RURUN_JOB_ID=${RURUN_JOB_ID:-${JOB_ID}}
RURUN_EXEC_METHOD=${RURUN_EXEC_METHOD:-shell}
RURUN_TARGET_METHOD=${RURUN_TARGET_METHOD:-id}

# defaults unset only
RURUN_TAG_FORMAT=${RURUN_TAG_FORMAT-"jobs/\${RURUN_JOB_ID}-\${target}"}

# debugging output
if [ -n "${RURUN_DEBUG}" ]; then
	echo "-----"
	echo "target (${target})"
	echo "RURUN_EXEC_METHOD (${RURUN_EXEC_METHOD})"
	echo "RURUN_JOB_ID (${RURUN_JOB_ID})"
	echo "RURUN_PNET_ADDR (${RURUN_PNET_ADDR})"
	echo "RURUN_TAG_FORMAT (${RURUN_TAG_FORMAT})"
	echo "-----"
fi

# set cg_path (if possible)
if [ -n "${RURUN_TAG_FORMAT}" ]; then
	cg_path=`eval echo "$RURUN_TAG_FORMAT"`
	if [ -n "${cg_path}" ]; then
		attrs="-a cg_path=${cg_path}"
	fi
fi

# set path
if [ -n "${RURUN_PNET_ADDR}" ]; then
	case ${RURUN_TARGET_METHOD} in
	host)
		path="${RURUN_PNET_ADDR}/${RURUN_TARGET_METHOD}/${target}"
		;;
	id)
		path="${RURUN_PNET_ADDR}/${RURUN_TARGET_METHOD}/${colon}${target}"
		;;
	*)
		path="${RURUN_PNET_ADDR}/${RURUN_TARGET_METHOD}"
		;;
	esac
elif [ -n "${RURUN_PNET_DIR}" ]; then
	case ${RURUN_TARGET_METHOD} in
	id)
		path="${RURUN_PNET_DIR}/${target}"
		;;
	*)
		echo "error: unsupported target method (${RURUN_TARGET_METHOD})" 1>&2
		exit 1
		;;
	esac
else
	echo "error: neither RURUN_PNET_ADDR nor RURUN_PNET_DIR are set" 1>&2
	exit 1
fi
path="${path}/+/exec/${RURUN_EXEC_METHOD}"

# mpirun-specific
# TODO: eliminate
if [ "${HYDRA_LAUNCHER}" = "ssh" ]; then
	# drop "-x"
	shift 1
fi

# execute
if [ -n "${RURUN_DEBUG}" ]; then
	echo exec ruexec ${attrs} "${path}" "$*"
fi
exec ruexec ${attrs} "${path}" "$*"
